// Go_BARRY/components/SupervisorCardDemo.jsx\n// Demo component to showcase individual supervisor tracking\n\nimport React, { useState } from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  TouchableOpacity,\n  ScrollView\n} from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport SupervisorCard from './SupervisorCard';\n\nconst SupervisorCardDemo = () => {\n  const [demoMode, setDemoMode] = useState('empty');\n\n  // Sample supervisor data matching the real system\n  const demoScenarios = {\n    empty: {\n      supervisors: [],\n      count: 0,\n      title: 'No Supervisors Online'\n    },\n    single: {\n      supervisors: [\n        {\n          id: 'alex_woodcock',\n          name: 'Alex Woodcock',\n          role: 'Traffic Supervisor',\n          duty: { id: '100', name: 'Duty 100 (6am-3:30pm)' },\n          isAdmin: false,\n          loginTime: new Date(Date.now() - 45 * 60000).toISOString(), // 45 minutes ago\n          status: 'active'\n        }\n      ],\n      count: 1,\n      title: 'Single Supervisor'\n    },\n    multiple: {\n      supervisors: [\n        {\n          id: 'alex_woodcock',\n          name: 'Alex Woodcock',\n          role: 'Traffic Supervisor',\n          duty: { id: '100', name: 'Duty 100 (6am-3:30pm)' },\n          isAdmin: false,\n          loginTime: new Date(Date.now() - 45 * 60000).toISOString(),\n          status: 'active'\n        },\n        {\n          id: 'claire_fiddler',\n          name: 'Claire Fiddler',\n          role: 'Traffic Supervisor',\n          duty: { id: '200', name: 'Duty 200 (7:30am-5pm)' },\n          isAdmin: false,\n          loginTime: new Date(Date.now() - 15 * 60000).toISOString(), // 15 minutes ago\n          status: 'active'\n        }\n      ],\n      count: 2,\n      title: 'Multiple Supervisors'\n    },\n    withAdmin: {\n      supervisors: [\n        {\n          id: 'barry_perryman',\n          name: 'Barry Perryman',\n          role: 'Service Delivery Controller - Line Manager',\n          duty: { id: 'controller', name: 'Service Delivery Controller Shift' },\n          isAdmin: true,\n          loginTime: new Date(Date.now() - 120 * 60000).toISOString(), // 2 hours ago\n          status: 'active'\n        },\n        {\n          id: 'james_daglish',\n          name: 'James Daglish',\n          role: 'Traffic Supervisor',\n          duty: { id: '400', name: 'Duty 400 (12:30pm-10pm)' },\n          isAdmin: false,\n          loginTime: new Date(Date.now() - 30 * 60000).toISOString(), // 30 minutes ago\n          status: 'active'\n        },\n        {\n          id: 'simon_glass',\n          name: 'Simon Glass',\n          role: 'Traffic Supervisor',\n          duty: { id: 'xops', name: 'XOps' },\n          isAdmin: false,\n          loginTime: new Date(Date.now() - 5 * 60000).toISOString(), // 5 minutes ago\n          status: 'active'\n        }\n      ],\n      count: 3,\n      title: 'Multiple with Line Manager'\n    }\n  };\n\n  const currentScenario = demoScenarios[demoMode];\n\n  return (\n    <ScrollView style={styles.container}>\n      <View style={styles.header}>\n        <Text style={styles.title}>Supervisor Card Demo</Text>\n        <Text style={styles.subtitle}>\n          Demonstrating individual supervisor tracking with names, roles, duties and admin status\n        </Text>\n      </View>\n\n      {/* Demo Controls */}\n      <View style={styles.controls}>\n        <Text style={styles.controlsTitle}>Demo Scenarios:</Text>\n        <View style={styles.controlButtons}>\n          {Object.entries(demoScenarios).map(([key, scenario]) => (\n            <TouchableOpacity\n              key={key}\n              style={[\n                styles.controlButton,\n                demoMode === key && styles.controlButtonActive\n              ]}\n              onPress={() => setDemoMode(key)}\n            >\n              <Text style={[\n                styles.controlButtonText,\n                demoMode === key && styles.controlButtonTextActive\n              ]}>\n                {scenario.title}\n              </Text>\n            </TouchableOpacity>\n          ))}\n        </View>\n      </View>\n\n      {/* Supervisor Card Demo */}\n      <View style={styles.demoContainer}>\n        <Text style={styles.demoTitle}>Live Preview:</Text>\n        <SupervisorCard \n          supervisors={currentScenario.supervisors}\n          connectedCount={currentScenario.count}\n          onCardPress={(expanded) => {\n            console.log('Demo supervisor card', expanded ? 'expanded' : 'collapsed');\n          }}\n        />\n      </View>\n\n      {/* Info Panel */}\n      <View style={styles.infoPanel}>\n        <View style={styles.infoPanelHeader}>\n          <Ionicons name=\"information-circle\" size={20} color=\"#3B82F6\" />\n          <Text style={styles.infoPanelTitle}>Features Demonstrated</Text>\n        </View>\n        <View style={styles.featureList}>\n          <View style={styles.featureItem}>\n            <Ionicons name=\"checkmark-circle\" size={16} color=\"#10B981\" />\n            <Text style={styles.featureText}>Real supervisor names and roles</Text>\n          </View>\n          <View style={styles.featureItem}>\n            <Ionicons name=\"checkmark-circle\" size={16} color=\"#10B981\" />\n            <Text style={styles.featureText}>Duty assignments (100, 200, 400, 500, XOps)</Text>\n          </View>\n          <View style={styles.featureItem}>\n            <Ionicons name=\"checkmark-circle\" size={16} color=\"#10B981\" />\n            <Text style={styles.featureText}>Line Manager admin badges (Barry)</Text>\n          </View>\n          <View style={styles.featureItem}>\n            <Ionicons name=\"checkmark-circle\" size={16} color=\"#10B981\" />\n            <Text style={styles.featureText}>Login time tracking and formatting</Text>\n          </View>\n          <View style={styles.featureItem}>\n            <Ionicons name=\"checkmark-circle\" size={16} color=\"#10B981\" />\n            <Text style={styles.featureText}>Color-coded status indicators</Text>\n          </View>\n          <View style={styles.featureItem}>\n            <Ionicons name=\"checkmark-circle\" size={16} color=\"#10B981\" />\n            <Text style={styles.featureText}>Expandable details with system status</Text>\n          </View>\n        </View>\n        \n        <View style={styles.realTimeNote}>\n          <Ionicons name=\"wifi\" size={16} color=\"#7C3AED\" />\n          <Text style={styles.realTimeText}>\n            In the real system, this data syncs automatically via WebSocket when supervisors log in/out\n          </Text>\n        </View>\n      </View>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#F8FAFC',\n  },\n  \n  header: {\n    padding: 24,\n    backgroundColor: '#FFFFFF',\n    borderBottomWidth: 1,\n    borderBottomColor: '#E5E7EB',\n  },\n  \n  title: {\n    fontSize: 24,\n    fontWeight: '700',\n    color: '#1F2937',\n    marginBottom: 8,\n  },\n  \n  subtitle: {\n    fontSize: 16,\n    color: '#6B7280',\n    lineHeight: 24,\n  },\n  \n  controls: {\n    padding: 20,\n    backgroundColor: '#FFFFFF',\n    marginTop: 16,\n    marginHorizontal: 16,\n    borderRadius: 12,\n    borderWidth: 1,\n    borderColor: '#E5E7EB',\n  },\n  \n  controlsTitle: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#374151',\n    marginBottom: 12,\n  },\n  \n  controlButtons: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 8,\n  },\n  \n  controlButton: {\n    paddingHorizontal: 16,\n    paddingVertical: 8,\n    borderRadius: 8,\n    backgroundColor: '#F3F4F6',\n    borderWidth: 1,\n    borderColor: '#D1D5DB',\n  },\n  \n  controlButtonActive: {\n    backgroundColor: '#3B82F6',\n    borderColor: '#3B82F6',\n  },\n  \n  controlButtonText: {\n    fontSize: 14,\n    fontWeight: '500',\n    color: '#374151',\n  },\n  \n  controlButtonTextActive: {\n    color: '#FFFFFF',\n  },\n  \n  demoContainer: {\n    margin: 16,\n  },\n  \n  demoTitle: {\n    fontSize: 18,\n    fontWeight: '600',\n    color: '#374151',\n    marginBottom: 12,\n    paddingHorizontal: 4,\n  },\n  \n  infoPanel: {\n    backgroundColor: '#FFFFFF',\n    margin: 16,\n    padding: 20,\n    borderRadius: 12,\n    borderWidth: 1,\n    borderColor: '#E5E7EB',\n  },\n  \n  infoPanelHeader: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 16,\n    gap: 8,\n  },\n  \n  infoPanelTitle: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#374151',\n  },\n  \n  featureList: {\n    gap: 12,\n  },\n  \n  featureItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 8,\n  },\n  \n  featureText: {\n    fontSize: 14,\n    color: '#4B5563',\n    flex: 1,\n  },\n  \n  realTimeNote: {\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    gap: 8,\n    marginTop: 16,\n    padding: 12,\n    backgroundColor: '#F8FAFC',\n    borderRadius: 8,\n    borderWidth: 1,\n    borderColor: '#E0E7FF',\n  },\n  \n  realTimeText: {\n    fontSize: 12,\n    color: '#5B21B6',\n    flex: 1,\n    lineHeight: 16,\n  },\n});\n\nexport default SupervisorCardDemo;